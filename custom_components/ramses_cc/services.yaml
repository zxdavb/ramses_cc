#
# integration-wide service action calls
# See for UI translated strings ./translations/lang.json

bind_device:
  # Bind a Device
  fields:
    device_id:
      # The device id of the supplicant.
      example: 03:123456
      required: true

    offer:
      # The command_code / domain_idx pairs for the binding offer.
      example: '{"30C9": "00"}'
      required: true

    confirm:
      # The command_code / domain_idx pairs for the binding confirmation, if required.
      required: false

    device_info:
      # The device_info command of the supplicant (needed to complete some bindings).
      required: false


force_update:
  # Immediately update the system state, without waiting for the next scheduled update.


send_packet:
  # Send a completely bespoke RAMSES II command packet from the gateway.
  fields:
    device_id:
      example: 01:123456
      required: true

    from_id:
      example: 18:123456
      required: false

    verb:
      example: RQ
      required: true

    code:
      example: 1F09
      required: true

    payload:
      example: '"00"'
      required: true


#
# evohome controller service calls (CH/DHW)

get_system_faults:
  # Get the Fault log of a TCS (Controller)

  fields:
    entity_id: &entity_id_system
      # Controller
      example: climate.01_123456
      required: true
      selector:
        entity:
          integration: ramses_cc
          domain: climate

    num_entries:
      # Number of log entries
      example: 8
      selector:
        number:
          min: 1
          max: 64
          step: 1
          # unit_of_measurement: entries
          mode: slider


reset_system_mode:
  #Fully reset the Mode of a TCS (Controller)

  fields:
    entity_id: *entity_id_system


set_system_mode:
  # Set the Mode of a TCS (Controller)

  fields:
    entity_id: *entity_id_system

    mode:
      # System Mode
      default: auto
      example: away
      required: true
      selector:
        select:
          mode: dropdown
          options:
            - auto
            - eco_boost
            - away
            - day_off
            - day_off_eco
            - heat_off
            - custom

    period:
      # Period (days)
      default: {days: 0}
      example: {days: 28}
      selector:
        duration:
          enable_day: true

    duration:
      # Duration (hours/minutes)
      default: {hours: 1}
      example: {hours: 2, minutes: 30}
      selector:
        duration:


#
# evohome zone service calls (CH/DHW)

get_zone_schedule:
  # Get the Weekly schedule of a Zone

  fields:
    entity_id: &entity_id_zone
      # Zone
      example: climate.01_123456_02
      required: true
      selector:
        entity:
          integration: ramses_cc
          domain: climate


put_zone_temp:
  # Fake the Sensor temperature of a Zone


reset_zone_config:
  # Reset the Configuration of a Zone

  fields:
    entity_id: *entity_id_zone


reset_zone_mode:
  # Reset the Mode of a Zone

  fields:
    entity_id: *entity_id_zone


set_zone_config:
  # Set the Configuration of a Zone

  fields:
    entity_id: *entity_id_zone

    min_temp:
      example: 5
      selector:
        number:
          min: 5
          max: 21
          step: 0.5
          unit_of_measurement: °C
          mode: slider

    max_temp:
      example: 30
      selector:
        number:
          min: 21
          max: 35
          step: 0.5
          unit_of_measurement: °C
          mode: slider


set_zone_mode:
  # Set the Mode of a Zone

  fields:
    entity_id: *entity_id_zone

    mode:
      # Zone Mode
      default: follow_schedule
      example: advanced_override
      required: true
      selector:
        select:
          mode: dropdown
          options:
            - follow_schedule
            - advanced_override
            - permanent_override
            - temporary_override

    setpoint:
      example: 19.5
      selector:
        number:
          min: 5
          max: 35
          step: 0.5
          unit_of_measurement: °C
          mode: slider

    duration:
      default:
        hours: 1
        minutes: 30
      example: '{"hours": 1, "minutes": 30}'
      selector:
        duration:

    until:
      example: '"YYYY-MM-DD HH:MM:SS"'
      selector:
        datetime:


set_zone_schedule:
  # Set the Weekly schedule of a Zone

  fields:
    entity_id: *entity_id_zone

    schedule:
      required: true
      selector:
        text:
          multiline: true


#
# evohome DHW service calls (CH/DHW)

get_dhw_schedule:
  # Get the Weekly schedule of a DHW

  fields:
    entity_id: &entity_id_dhw
      # Stored DHW
      example: water_heater.01_123456_hw
      required: true
      selector:
        entity:
          integration: ramses_cc
          domain: water_heater


reset_dhw_mode:
  # Reset the Mode of a DHW

  fields:
    entity_id: *entity_id_dhw


reset_dhw_params:
  # Reset the Configuration of a DHW

  fields:
    entity_id: *entity_id_dhw


set_dhw_boost:
  # Start Boost mode for a DHW

  fields:
    entity_id: *entity_id_dhw


set_dhw_mode:
  # Set the Mode of a DHW

  fields:
    entity_id: *entity_id_dhw

    mode:
      # DHW mode
      default: follow_schedule
      example: advanced_override
      required: true
      selector:
        select:
          mode: dropdown
          options:
            - follow_schedule
            - advanced_override
            - permanent_override
            - temporary_override

    active:
      # DHW state
      example: true
      selector:
        boolean:

    duration:
      default:
        hours: 1
        minutes: 30
      example: '{"hours": 1, "minutes": 30}'
      selector:
        duration:

    until:
      example: '"YYYY-MM-DD HH:MM:SS"'
      selector:
        datetime:


set_dhw_params:
  # Set the Configuration of a DHW

  fields:
    entity_id: *entity_id_dhw

    setpoint:
      example: 50.0
      selector:
        number:
          min: 35
          max: 85
          step: 0.5
          unit_of_measurement: °C
          mode: slider

    overrun:
      example: 5
      selector:
        number:
          min: 0
          max: 5
          step: 0.5
          mode: slider

    differential:
      example: 1
      selector:
        number:
          min: 5
          max: 21
          step: 0.5
          unit_of_measurement: °C
          mode: slider


set_dhw_schedule:
  # Set the Weekly schedule of a DHW

  fields:
    entity_id: *entity_id_dhw

    schedule:
      required: true
      selector:
        text:
          multiline: true



# faked entity service calls

fake_zone_temp:
  # Fake a Room temperature

  fields:
    entity_id:
      # Zone
      example: climate.01_123456_02
      required: true
      selector:
        entity:
          integration: ramses_cc
          domain: climate

    temperature:
      required: true
      example: 21.3
      selector:
        number:
          unit_of_measurement: °C
          min: -20
          max: 60
          step: 0.5
          mode: slider


fake_dhw_temp:
  # Fake a DHW temperature

  fields:
    entity_id:
      # Stored HW
      example: water_heater.01_123456
      required: true
      selector:
        entity:
          integration: ramses_cc
          domain: water_heater

    temperature:
      required: true
      example: 63.4
      selector:
        number:
          unit_of_measurement: °C
          min: 0
          max: 99
          step: 0.5
          mode: slider


#
# faked sensor service calls

put_room_temp:
  # Announce a Room temperature

  fields:
    entity_id:
      # Thermostat
      example: sensor.03_123456_temperature
      required: true
      selector:
        entity:
          integration: ramses_cc
          domain: sensor
          device_class: temperature

    temperature:
      required: true
      example: 21.3
      selector:
        number:
          unit_of_measurement: °C
          min: -20
          max: 60
          step: 0.5
          mode: slider


put_dhw_temp:
  # Announce a DHW temperature

  fields:
    entity_id:
      # Stored DHW
      example: sensor.07_123456_temperature
      required: true
      selector:
        entity:
          integration: ramses_cc
          domain: sensor
          device_class: dhw_temp

    temperature:
      required: true
      example: 63.4
      selector:
        number:
          unit_of_measurement: °C
          min: 0
          max: 99
          step: 0.5
          mode: slider


put_co2_level:
  # Announce an Indoor CO2 level

  fields:
    entity_id:
      example: sensor.30_123456_co2_level
      required: true
      selector:
        entity:
          integration: ramses_cc
          domain: sensor
          device_class: carbon_dioxide

    co2_level:
      required: true
      example: 363
      selector:
        number:
          unit_of_measurement: ppm
          min: 300
          max: 9999
          step: 25
          mode: slider


put_indoor_humidity:
  # Announce an Indoor relative humidity

  fields:
    entity_id:
      example: sensor.30_123456_indoor_humidity
      required: true
      selector:
        entity:
          integration: ramses_cc
          domain: sensor
          device_class: humidity

    indoor_humidity:
      required: true
      example: 59.3
      selector:
        number:
          unit_of_measurement: '%'
          min: 0
          max: 100
          step: 0.5
          mode: slider


#
# faked remote service calls

delete_command:
  # Delete a Remote command

  fields:
    entity_id: &entity_id_remote
      required: true
      example: remote.30_123456
      selector:
        entity:
          integration: ramses_cc
          domain: remote

    command: &command_remote
      required: true
      example: Boost
      selector:
        text:


learn_command:
  # Learn a Remote command

  fields:
    entity_id: *entity_id_remote

    command: *command_remote

    timeout:
      required: false
      default: 30
      example: 60
      selector:
        number:
          min: 30
          max: 300
          step: 5
          mode: slider


send_command:
  # Send a Remote command

  fields:
    entity_id: *entity_id_remote

    command: *command_remote

    num_repeats:
      required: false
      default: 3
      example: 3
      selector:
        number:
          min: 1
          max: 5
          step: 1
          mode: slider

    delay_secs:
      required: false
      default: 0.05
      example: 0.05
      selector:
        number:
          min: 0.02
          max: 1.0
          step: 0.01
          mode: slider


# TODO change entity_id (selector) to HA targets
# since HA 2024.8 Update all references to "services" to "service actions"
# see docs https://developers.home-assistant.io/docs/dev_101_services/
# If the service accepts entity IDs, target allows the user to specify entities by
# entity, device, or area. If `target` is specified, `entity_id` should not be defined
# in the `fields` map. By default, it shows only targets matching entities from the same
# domain as the service, but if further customization is required, target supports the
# entity, device, and area selectors
# (https://www.home-assistant.io/docs/blueprint/selectors/).
# Entity selector parameters will automatically be applied to device and area, and
# device selector parameters will automatically be applied to area
